{"ast":null,"code":"var _jsxFileName = \"/home/alisarmadi/html/projects/chatroom/forntend/src/pages/login/login.js\";\nimport React, { useState, useReducer } from 'react'; //import css && bootstrap\n\nimport Form from 'react-bootstrap/Form';\nimport './login.css'; //import component\n\nimport AlertDismissibleExample from '../../Components/alertDismissibleExample'; //import context\n\nimport LoginContext from '../../context/loginContext'; //import Reducer\n\nimport AppReducer from './../../reducers/appReducer';\nimport InputLog from './fromComonent/inputLog';\n\nconst Login = props => {\n  const [state, dispatch] = useReducer(AppReducer, {\n    name: '',\n    gender: '',\n    message: []\n  });\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState('0');\n  const [massage, setmassage] = useState([]); //methods\n\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, massage.map(item => {\n    return /*#__PURE__*/React.createElement(AlertDismissibleExample, {\n      name: name,\n      id: item.id,\n      massage: item.massage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    });\n  }), /*#__PURE__*/React.createElement(InputLog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/alisarmadi/html/projects/chatroom/forntend/src/pages/login/login.js"],"names":["React","useState","useReducer","Form","AlertDismissibleExample","LoginContext","AppReducer","InputLog","Login","props","state","dispatch","name","gender","message","setName","setGender","massage","setmassage","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,uBAAP,MAAoC,0CAApC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,4BAAzB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAGA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACI,UAAD,EAAa;AAC7CM,IAAAA,IAAI,EAAE,EADuC;AAE7CC,IAAAA,MAAM,EAAE,EAFqC;AAG7CC,IAAAA,OAAO,EAAE;AAHoC,GAAb,CAApC;AAKA,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASG,SAAT,IAAsBf,QAAQ,CAAC,GAAD,CAApC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC,CARmB,CASnB;;AAGA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC1BS,MAAAA,KAD0B;AAE1BC,MAAAA;AAF0B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQM,OAAO,CAACE,GAAR,CAAYC,IAAI,IAAI;AAChB,wBACI,oBAAC,uBAAD;AAAyB,MAAA,IAAI,EAAER,IAA/B;AAAqC,MAAA,EAAE,EAAEQ,IAAI,CAACC,EAA9C;AAAkD,MAAA,OAAO,EAAED,IAAI,CAACH,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJD,CAFR,eAUI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CALJ,CADJ;AAuBH,CAnCD;;AAqCA,eAAeT,KAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\n//import css && bootstrap\nimport Form from 'react-bootstrap/Form'\nimport './login.css'\n//import component\nimport AlertDismissibleExample from '../../Components/alertDismissibleExample';\n//import context\nimport LoginContext from '../../context/loginContext'\n//import Reducer\nimport AppReducer from './../../reducers/appReducer'\nimport InputLog from './fromComonent/inputLog';\n\n\nconst Login = props => {\n    const [state, dispatch] = useReducer(AppReducer, {\n        name: '',\n        gender: '',\n        message: []\n    })\n    const [name, setName] = useState('')\n    const [gender, setGender] = useState('0')\n    const [massage, setmassage] = useState([])\n    //methods\n\n\n    return (\n        <LoginContext.Provider value={{\n            state,\n            dispatch\n\n        }}>\n            <div>\n                {\n                    massage.map(item => {\n                        return (\n                            <AlertDismissibleExample name={name} id={item.id} massage={item.massage} />\n                        )\n                    })\n                }\n\n\n                <InputLog />\n\n\n            </div>\n        </LoginContext.Provider>\n\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}