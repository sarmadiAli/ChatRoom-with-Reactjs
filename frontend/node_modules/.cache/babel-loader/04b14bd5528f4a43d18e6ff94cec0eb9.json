{"ast":null,"code":"var _jsxFileName = \"/home/alisarmadi/html/projects/chatroom/forntend/src/pages/chatRoom/chatComonent/body.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport SocketIOClient from 'socket.io-client'; //import image\n\nimport male_user from '../img/male_user.png';\nimport famle_user from '../img/woman(1).png'; //import boostarpt\n\nimport Card from 'react-bootstrap/Card'; //import context\n\nimport ChatContext from '../../../context/chatContext';\n\nfunction BodyChat(props) {\n  let chatContext = useContext(ChatContext);\n  const {\n    propsChat\n  } = props;\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState([]);\n  useEffect(() => {\n    socket.current.on(\"newMessage\", message => {\n      setMessages(messages => messages.concat(message)); // scrollable.current.scroll(0, scrollable.current.scrollHeight)\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, messages.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: item.state.name === propsChat.location.state.name ? \"imgDiv\" : \"imgDivReverc\",\n      key: item.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.state.gender === \"0\" ? `${male_user}` : `${famle_user}`,\n      title: `${item.state.name}`,\n      className: \"imgUser\",\n      alt: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Card.Text, {\n      className: item.state.name === propsChat.location.state.name ? \"textBorder\" : \"speechbubble\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, \" \", item.state.name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"messageText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, item.mes)));\n  }));\n}\n\nexport default BodyChat;","map":{"version":3,"sources":["/home/alisarmadi/html/projects/chatroom/forntend/src/pages/chatRoom/chatComonent/body.js"],"names":["React","useEffect","useState","useContext","SocketIOClient","male_user","famle_user","Card","ChatContext","BodyChat","props","chatContext","propsChat","messages","setMessages","text","setText","socket","current","on","message","concat","map","item","state","name","location","key","gender","mes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,WAAW,GAAGR,UAAU,CAACK,WAAD,CAA5B;AAEA,QAAM;AAACI,IAAAA;AAAD,MAAYF,KAAlB;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,MAAM,CAACC,OAAP,CAAeC,EAAf,CAAkB,YAAlB,EAAiCC,OAAD,IAAa;AACzCN,MAAAA,WAAW,CAACD,QAAQ,IAAIA,QAAQ,CAACQ,MAAT,CAAgBD,OAAhB,CAAb,CAAX,CADyC,CAEzC;AAEH,KAJD;AAMH,GAPQ,EAON,EAPM,CAAT;AAQA,sBACI,0CAEQP,QAAQ,CAACS,GAAT,CAAaC,IAAI,IAAI;AAEjB,wBACI;AAAK,MAAA,SAAS,EAAEA,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoBb,SAAS,CAACc,QAAV,CAAmBF,KAAnB,CAAyBC,IAA7C,GAAoD,QAApD,GAA+D,cAA/E;AAA+F,MAAA,GAAG,EAAEF,IAAI,CAACI,GAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,GAAG,EAAEJ,IAAI,CAACC,KAAL,CAAWI,MAAX,KAAsB,GAAtB,GAA6B,GAAEvB,SAAU,EAAzC,GAA8C,GAAEC,UAAW,EAArE;AAAwE,MAAA,KAAK,EAAG,GAAEiB,IAAI,CAACC,KAAL,CAAWC,IAAK,EAAlG;AAAqG,MAAA,SAAS,EAAC,SAA/G;AAAyH,MAAA,GAAG,EAAC,KAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAEF,IAAI,CAACC,KAAL,CAAWC,IAAX,KAAoBb,SAAS,CAACc,QAAV,CAAmBF,KAAnB,CAAyBC,IAA7C,GAAoD,YAApD,GAAmE,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQF,IAAI,CAACC,KAAL,CAAWC,IAAnB,CAHJ,eAII;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BF,IAAI,CAACM,GAApC,CAJJ,CAHJ,CADJ;AAeH,GAjBD,CAFR,CADJ;AAwBH;;AAED,eAAepB,QAAf","sourcesContent":["import React, { useEffect, useState ,useContext} from 'react'\nimport SocketIOClient from 'socket.io-client'\n//import image\nimport male_user from '../img/male_user.png'\nimport famle_user from '../img/woman(1).png'\n//import boostarpt\nimport Card from 'react-bootstrap/Card'\n//import context\nimport ChatContext from '../../../context/chatContext'\n\nfunction BodyChat(props) {\n    let chatContext = useContext(ChatContext)\n\n    const {propsChat}=props\n\n    const [messages, setMessages] = useState([])\n    const [text, setText] = useState([])\n   \n    useEffect(() => {\n        socket.current.on(\"newMessage\", (message) => {\n            setMessages(messages => messages.concat(message));\n            // scrollable.current.scroll(0, scrollable.current.scrollHeight)\n\n        })\n\n    }, [])\n    return (\n        <>\n            {\n                messages.map(item => {\n\n                    return (\n                        <div className={item.state.name === propsChat.location.state.name ? \"imgDiv\" : \"imgDivReverc\"} key={item.key}>\n\n                            <img src={item.state.gender === \"0\" ? `${male_user}` : `${famle_user}`} title={`${item.state.name}`} className=\"imgUser\" alt=\"img\" />\n                            <Card.Text className={item.state.name === propsChat.location.state.name ? \"textBorder\" : \"speechbubble\"} >\n\n\n                                <span> {item.state.name}</span>\n                                <span className=\"messageText\">{item.mes}</span>\n\n\n\n                            </Card.Text>\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default BodyChat"]},"metadata":{},"sourceType":"module"}